// Code generated by protoc-gen-go.
// source: deployment.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DeploymentResponse represents a deployment request
type DeploymentRequest struct {
	App      string   `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Image    string   `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Replicas int32    `protobuf:"varint,3,opt,name=replicas" json:"replicas,omitempty"`
	Zone     string   `protobuf:"bytes,4,opt,name=zone" json:"zone,omitempty"`
	Port     int32    `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
	Env      []string `protobuf:"bytes,6,rep,name=env" json:"env,omitempty"`
}

func (m *DeploymentRequest) Reset()                    { *m = DeploymentRequest{} }
func (m *DeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*DeploymentRequest) ProtoMessage()               {}
func (*DeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// DeploymentJob represents a deployment job
type DeploymentJob struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeploymentJob) Reset()                    { *m = DeploymentJob{} }
func (m *DeploymentJob) String() string            { return proto.CompactTextString(m) }
func (*DeploymentJob) ProtoMessage()               {}
func (*DeploymentJob) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// DeploymentResponse represents a deployment response
type DeploymentResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *DeploymentResponse) Reset()                    { *m = DeploymentResponse{} }
func (m *DeploymentResponse) String() string            { return proto.CompactTextString(m) }
func (*DeploymentResponse) ProtoMessage()               {}
func (*DeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func init() {
	proto.RegisterType((*DeploymentRequest)(nil), "api.DeploymentRequest")
	proto.RegisterType((*DeploymentJob)(nil), "api.DeploymentJob")
	proto.RegisterType((*DeploymentResponse)(nil), "api.DeploymentResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for DeploymentService service

type DeploymentServiceClient interface {
	CreateDeployment(ctx context.Context, in *DeploymentRequest, opts ...grpc.CallOption) (*DeploymentJob, error)
	GetDeployment(ctx context.Context, in *DeploymentJob, opts ...grpc.CallOption) (*DeploymentRequest, error)
}

type deploymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentServiceClient(cc *grpc.ClientConn) DeploymentServiceClient {
	return &deploymentServiceClient{cc}
}

func (c *deploymentServiceClient) CreateDeployment(ctx context.Context, in *DeploymentRequest, opts ...grpc.CallOption) (*DeploymentJob, error) {
	out := new(DeploymentJob)
	err := grpc.Invoke(ctx, "/api.DeploymentService/CreateDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentServiceClient) GetDeployment(ctx context.Context, in *DeploymentJob, opts ...grpc.CallOption) (*DeploymentRequest, error) {
	out := new(DeploymentRequest)
	err := grpc.Invoke(ctx, "/api.DeploymentService/GetDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DeploymentService service

type DeploymentServiceServer interface {
	CreateDeployment(context.Context, *DeploymentRequest) (*DeploymentJob, error)
	GetDeployment(context.Context, *DeploymentJob) (*DeploymentRequest, error)
}

func RegisterDeploymentServiceServer(s *grpc.Server, srv DeploymentServiceServer) {
	s.RegisterService(&_DeploymentService_serviceDesc, srv)
}

func _DeploymentService_CreateDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DeploymentServiceServer).CreateDeployment(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _DeploymentService_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeploymentJob)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DeploymentServiceServer).GetDeployment(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _DeploymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DeploymentService",
	HandlerType: (*DeploymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDeployment",
			Handler:    _DeploymentService_CreateDeployment_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _DeploymentService_GetDeployment_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor3 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0xde, 0x6e, 0xb7, 0xab, 0x0e, 0xac, 0xd4, 0x41, 0x24, 0xf4, 0xe2, 0x92, 0x93, 0xa7, 0x1c,
	0xf4, 0x2c, 0x08, 0x0a, 0x82, 0xc7, 0xfa, 0x04, 0xd9, 0xdd, 0x41, 0x02, 0x36, 0x89, 0x49, 0x5c,
	0xd0, 0xb7, 0x10, 0x7c, 0x60, 0x93, 0xac, 0xb6, 0xf5, 0xef, 0xf6, 0xcd, 0xf7, 0xd3, 0xf9, 0x3a,
	0x81, 0x7a, 0x43, 0xf6, 0xd1, 0xbc, 0x74, 0xa4, 0x83, 0xb0, 0xce, 0x04, 0x83, 0xa5, 0xb4, 0x8a,
	0xbf, 0x15, 0x70, 0x74, 0xd3, 0x2b, 0x2d, 0x3d, 0x3d, 0x93, 0x0f, 0x58, 0x43, 0x14, 0x2d, 0x2b,
	0x96, 0xc5, 0xd9, 0x41, 0x9b, 0x20, 0x1e, 0x43, 0xa5, 0x3a, 0xf9, 0x40, 0x6c, 0x9a, 0xb9, 0xdd,
	0x80, 0x0d, 0xec, 0xbb, 0x18, 0x56, 0x6b, 0xe9, 0x59, 0x19, 0x85, 0xaa, 0xed, 0x67, 0x44, 0x98,
	0xbd, 0x1a, 0x4d, 0x6c, 0x96, 0x03, 0x19, 0x27, 0xce, 0x1a, 0x17, 0x58, 0x95, 0xbd, 0x19, 0xa7,
	0x5d, 0xa4, 0xb7, 0x6c, 0xbe, 0x2c, 0xd3, 0xae, 0x08, 0xf9, 0x29, 0x2c, 0x86, 0x4a, 0x77, 0x66,
	0x85, 0x87, 0x30, 0x55, 0x9b, 0xcf, 0x36, 0x11, 0x71, 0x01, 0x38, 0xee, 0xec, 0xad, 0xd1, 0x9e,
	0x90, 0xc1, 0x5e, 0x47, 0xde, 0xa7, 0x92, 0x3b, 0xeb, 0xd7, 0x78, 0xfe, 0xfe, 0xed, 0x27, 0xef,
	0xc9, 0x6d, 0xd5, 0x9a, 0xf0, 0x0a, 0xea, 0x6b, 0x47, 0x32, 0xd0, 0x20, 0xe1, 0x89, 0x88, 0x47,
	0x11, 0xbf, 0x0e, 0xd2, 0xe0, 0x0f, 0x3e, 0xb6, 0xe2, 0x13, 0xbc, 0x84, 0xc5, 0x2d, 0x85, 0x51,
	0xfc, 0x0f, 0x5b, 0xf3, 0xcf, 0x27, 0xf9, 0x64, 0x35, 0xcf, 0xef, 0x70, 0xf1, 0x11, 0x00, 0x00,
	0xff, 0xff, 0x8e, 0x5d, 0x0d, 0x0b, 0x9b, 0x01, 0x00, 0x00,
}
