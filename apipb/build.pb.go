// Code generated by protoc-gen-go.
// source: build.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// CreateBuildRequest represents a build creation request
type CreateBuildRequest struct {
	App          string                     `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Author       string                     `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Commit       string                     `protobuf:"bytes,3,opt,name=commit" json:"commit,omitempty"`
	Origin       string                     `protobuf:"bytes,4,opt,name=origin" json:"origin,omitempty"`
	Organisation string                     `protobuf:"bytes,5,opt,name=organisation" json:"organisation,omitempty"`
	Repository   string                     `protobuf:"bytes,6,opt,name=repository" json:"repository,omitempty"`
	Timestamp    *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *CreateBuildRequest) Reset()                    { *m = CreateBuildRequest{} }
func (m *CreateBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBuildRequest) ProtoMessage()               {}
func (*CreateBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CreateBuildRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// CreateBuildResponse represents a build creation response
type CreateBuildResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateBuildResponse) Reset()                    { *m = CreateBuildResponse{} }
func (m *CreateBuildResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateBuildResponse) ProtoMessage()               {}
func (*CreateBuildResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// GetBuildRequest represents a build request
type GetBuildRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetBuildRequest) Reset()                    { *m = GetBuildRequest{} }
func (m *GetBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBuildRequest) ProtoMessage()               {}
func (*GetBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

// GetBuildResponse represents a build creation response
type GetBuildResponse struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *GetBuildResponse) Reset()                    { *m = GetBuildResponse{} }
func (m *GetBuildResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBuildResponse) ProtoMessage()               {}
func (*GetBuildResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func init() {
	proto.RegisterType((*CreateBuildRequest)(nil), "api.CreateBuildRequest")
	proto.RegisterType((*CreateBuildResponse)(nil), "api.CreateBuildResponse")
	proto.RegisterType((*GetBuildRequest)(nil), "api.GetBuildRequest")
	proto.RegisterType((*GetBuildResponse)(nil), "api.GetBuildResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for BuildService service

type BuildServiceClient interface {
	CreateBuild(ctx context.Context, in *CreateBuildRequest, opts ...grpc.CallOption) (*CreateBuildResponse, error)
	GetBuild(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*GetBuildResponse, error)
}

type buildServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuildServiceClient(cc *grpc.ClientConn) BuildServiceClient {
	return &buildServiceClient{cc}
}

func (c *buildServiceClient) CreateBuild(ctx context.Context, in *CreateBuildRequest, opts ...grpc.CallOption) (*CreateBuildResponse, error) {
	out := new(CreateBuildResponse)
	err := grpc.Invoke(ctx, "/api.BuildService/CreateBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) GetBuild(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*GetBuildResponse, error) {
	out := new(GetBuildResponse)
	err := grpc.Invoke(ctx, "/api.BuildService/GetBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BuildService service

type BuildServiceServer interface {
	CreateBuild(context.Context, *CreateBuildRequest) (*CreateBuildResponse, error)
	GetBuild(context.Context, *GetBuildRequest) (*GetBuildResponse, error)
}

func RegisterBuildServiceServer(s *grpc.Server, srv BuildServiceServer) {
	s.RegisterService(&_BuildService_serviceDesc, srv)
}

func _BuildService_CreateBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BuildServiceServer).CreateBuild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _BuildService_GetBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BuildServiceServer).GetBuild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _BuildService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BuildService",
	HandlerType: (*BuildServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBuild",
			Handler:    _BuildService_CreateBuild_Handler,
		},
		{
			MethodName: "GetBuild",
			Handler:    _BuildService_GetBuild_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor2 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0x0b, 0x85, 0x4e, 0x2b, 0xa8, 0x86, 0x3f, 0x2b, 0x0b, 0x7e, 0x22, 0x21, 0xb1,
	0x4a, 0xa5, 0xb2, 0x01, 0x96, 0x65, 0xc1, 0xbe, 0x70, 0x01, 0xb7, 0x35, 0xc1, 0x52, 0x93, 0x31,
	0xb6, 0x83, 0xc4, 0x21, 0xb8, 0x29, 0x87, 0xc0, 0xb1, 0x1b, 0xda, 0xa6, 0xec, 0x3c, 0xdf, 0xbc,
	0xb1, 0xfd, 0xde, 0x40, 0x6f, 0x5a, 0xca, 0xc5, 0x3c, 0x55, 0x9a, 0x2c, 0x61, 0x9b, 0x2b, 0x19,
	0x5f, 0x66, 0x44, 0xd9, 0x42, 0x0c, 0x3d, 0x9a, 0x96, 0x6f, 0x43, 0x2b, 0x73, 0x61, 0x2c, 0xcf,
	0x55, 0x50, 0x25, 0x3f, 0x11, 0xe0, 0x93, 0x16, 0xdc, 0x8a, 0x71, 0x35, 0x3b, 0x11, 0x1f, 0xa5,
	0xeb, 0xe3, 0x00, 0xdc, 0xb8, 0x62, 0xd1, 0x55, 0x74, 0xdb, 0x9d, 0x54, 0x47, 0x3c, 0x83, 0x0e,
	0x2f, 0xed, 0x3b, 0x69, 0xd6, 0xf2, 0x70, 0x59, 0x55, 0x7c, 0x46, 0x79, 0x2e, 0x2d, 0x6b, 0x07,
	0x1e, 0xaa, 0x8a, 0x93, 0x96, 0x99, 0x2c, 0xd8, 0x6e, 0xe0, 0xa1, 0xc2, 0x04, 0xfa, 0xa4, 0x33,
	0x5e, 0x48, 0xc3, 0xad, 0xa4, 0x82, 0xed, 0xf9, 0xee, 0x06, 0xc3, 0x0b, 0x00, 0x2d, 0x14, 0x19,
	0x69, 0x49, 0x7f, 0xb1, 0x8e, 0x57, 0xac, 0x11, 0xbc, 0x87, 0xee, 0x9f, 0x0f, 0xb6, 0xef, 0xda,
	0xbd, 0x51, 0x9c, 0x06, 0xa7, 0x69, 0xed, 0x34, 0x7d, 0xad, 0x15, 0x93, 0x95, 0x38, 0xb9, 0x81,
	0xe3, 0x0d, 0xb7, 0x46, 0x51, 0x61, 0x04, 0x1e, 0x42, 0x4b, 0xce, 0x97, 0x6e, 0xdd, 0x29, 0xb9,
	0x86, 0xa3, 0x67, 0x61, 0x37, 0x12, 0x69, 0x4a, 0x1e, 0x61, 0xb0, 0x92, 0xfc, 0x7f, 0x4d, 0x95,
	0x81, 0x7b, 0xd6, 0x96, 0xa6, 0xce, 0x2c, 0x54, 0xa3, 0xef, 0x08, 0xfa, 0x7e, 0xf2, 0x45, 0xe8,
	0x4f, 0x39, 0x13, 0x38, 0x86, 0xde, 0xda, 0xb7, 0xf0, 0x3c, 0x75, 0xbb, 0x4b, 0xb7, 0xd7, 0x12,
	0xb3, 0xed, 0x46, 0x78, 0x3a, 0xd9, 0xc1, 0x07, 0x38, 0xa8, 0x3f, 0x84, 0x27, 0x5e, 0xd7, 0xb0,
	0x10, 0x9f, 0x36, 0x68, 0x3d, 0x3a, 0xed, 0xf8, 0xd0, 0xee, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x15, 0x59, 0x24, 0x76, 0x40, 0x02, 0x00, 0x00,
}
